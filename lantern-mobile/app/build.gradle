apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'android-apt'

android {

    useLibrary 'org.apache.http.legacy'

    packagingOptions { 
        exclude 'META-INF/LICENSE.txt' 
        exclude 'META-INF/NOTICE.txt' 
        exclude 'META-INF/maven/commons-io/commons-io/pom.xml'
        exclude 'META-INF/maven/commons-io/commons-io/pom.properties'
    }

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    // Use now as the user-visible version
    def now = new java.util.Date()
    def nowFormatted = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(now)

    // Calculate the versionCode as the number of seconds from a fixed start
    // point so that it's always increasing.
    def start = new java.util.Date(2015, 1, 1).getTime()
    def code = (int) ((now.getTime() - start) / 1000)

    defaultConfig {
        // Enabling multidex support.
        // multiDexEnabled true
	    minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        applicationId "org.getlantern.lantern"
        versionCode code
        versionName "$project.lanternVersion ($project.lanternRevisionDate)"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            if (project.hasProperty("KEYSTORE_FILE")) {
                storeFile file(KEYSTORE_FILE)
                keyAlias "Lantern Release Key"
                storePassword KEYSTORE_PWD
                keyPassword KEY_PWD
            }
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', '../../../MobileSDK/sdk/proguard-rules.pro'
        }

        applicationVariants.all { variant ->

            variant.outputs.each { output ->
                output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("app-debug", "lantern-debug")
                )
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile(name:'liblantern', ext:'aar')
    compile(name:'android-sdk-debug', ext:'aar')
    compile(name:'finestwebview', ext:'aar')
    compile(name:'pubsub-sdk-debug', ext:'aar')

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile gplay

    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"

    // Mandrill dependencies
    compile 'commons-io:commons-io:2.4'

    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'

    // FinestWebView dependencies
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.thefinestartist:utils:0.9.0'

    compile 'com.stripe:stripe-android:+'
    compile 'com.googlecode.libphonenumber:libphonenumber:7.2.1'
    compile 'info.hoang8f:android-segmented:1.0.6'

    // SmartTabLayout dependencies
    compile 'com.ogaclejapan.smarttablayout:library:1.6.0@aar'
    compile 'com.ogaclejapan.smarttablayout:utils-v4:1.6.0@aar'

    compile 'com.github.bumptech.glide:glide:3.7.0'

    //compile 'com.google.guava:guava:19.0'

    compile ('com.mandrillapp.wrapper.lutung:lutung:0.0.7') {
        exclude group: 'org.apache.commons', module: 'commons-io'
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.5.3@aar') {
        transitive = true
    }

    apt "org.androidannotations:androidannotations:" + androidAnnotationsVersion
    compile("org.androidannotations:androidannotations-api:" + androidAnnotationsAPIVersion )

    // Testing-only dependencies
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
}

apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        resourcePackageName 'org.lantern'
    }
}
